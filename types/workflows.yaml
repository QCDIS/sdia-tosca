tosca_definitions_version: "tosca_simple_yaml_1_0"
topology_template:
  node_templates:
    compute:
      properties:
        disk_size: "10000 MB"
        mem_size: "1000 MB"
        num_cores: 1
        os: "Ubuntu 18.04"
        user_name: "vm_user"
      interfaces:
        Standard:
          create: "dumy.yaml"
      type: "tosca.nodes.QC.VM.Compute"
    compute_1:
      properties:
        disk_size: "10000 MB"
        mem_size: "1000 MB"
        num_cores: 1
        os: "Ubuntu 18.04"
        user_name: "vm_user"
      interfaces:
        Standard:
          create: "dumy.yaml"
      type: "tosca.nodes.QC.VM.Compute"
    kubernetes:
      requirements:
      - host:
          capability: "tosca.capabilities.QC.VM.topology"
          node: "topology"
          relationship: "tosca.relationships.HostedOn"
      interfaces:
        Standard:
          configure:
            inputs:
              playbook: "https://github.com/QCAPI-DRIP/playbooks.gitk8s_dashboard.yaml"
          create:
            inputs:
              playbook: "https://github.com/QCAPI-DRIP/playbooks.gitinstall_k8s.yaml"
          delete:
            inputs:
              playbook: "https://github.com/QCAPI-DRIP/playbooks.gitk8s_delete.yaml"
      type: "tosca.nodes.QC.docker.Orchestrator.Kubernetes"
    topology:
      properties:
        domain: "Frankfurt"
        provider: "EC2"
      requirements:
      - vm:
          capability: "tosca.capabilities.QC.VM"
          node: "compute"
          relationship: "tosca.relationships.DependsOn"
      - vm:
          capability: "tosca.capabilities.QC.VM"
          node: "compute_1"
          relationship: "tosca.relationships.DependsOn"
      interfaces:
        CloudsStorm:
          delete:
            inputs:
              code_type: "SEQ"
              object_type: "SubTopology"
          hscale:
            inputs:
              code_type: "SEQ"
              object_type: "SubTopology"
          provision:
            inputs:
              code_type: "SEQ"
              object_type: "SubTopology"
          start:
            inputs:
              code_type: "SEQ"
              object_type: "SubTopology"
          stop:
            inputs:
              code_type: "SEQ"
              object_type: "SubTopology"
      type: "tosca.nodes.QC.VM.topology"
      artifacts:
        provisioned_files:
          required: false
          type: "string"
    ws-pema:
      properties:
        ports:
        - "30001:8080"
      requirements:
      - host:
          capability: "tosca.capabilities.QC.docker.Orchestrator"
          node: "kubernetes"
          relationship: "tosca.relationships.HostedOn"
      type: "tosca.nodes.QC.Container.Application.Docker"
      artifacts:
        image:
          file: "alogo53/ws-pema-lifewatch"
          repository: "docker_hub"
          type: "tosca.artifacts.Deployment.Image.Container.Docker"


  workflows:
    install:
      description: Workflow to deploy the vm 
      steps:
        compute_start:
          node: compute 
          preconditions:
            state: initial 
            attributes:
             version: 0.0.0
             is_master: true
            activities:
            - set_state: creating
            - call_operation: tosca.interfaces.node.lifecycle.Standard.create
            - set_state: created
            - set_state: starting
            - call_operation: tosca.interfaces.node.lifecycle.Standard.start
            - set_state: started
          on-success:
            - compute1_start

description: "TOSCA example"
imports:
- nodes: "https://raw.githubusercontent.com/QCAPI-DRIP/qc-tosca/master/types/nodes.yaml"
- data: "https://raw.githubusercontent.com/skoulouzis/CONF/develop/TOSCA/types/data.yml"
- capabilities: "https://raw.githubusercontent.com/QCAPI-DRIP/qc-tosca/master/types/capabilities.yaml"
- policies: "https://raw.githubusercontent.com/QCAPI-DRIP/qc-tosca/master/types/policies.yaml"
- interfaces: "https://raw.githubusercontent.com/QCAPI-DRIP/qc-tosca/master/types/interfaces.yml"
