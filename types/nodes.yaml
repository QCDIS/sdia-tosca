tosca_definitions_version: tosca_simple_yaml_1_0

node_types:
  tosca.nodes.QC.Root:
    description: root QC node
    attributes:
      current_state:
        type: string
        required: false
        description: the current state of the node
      desired_state:
        type: string
        required: false
        description: the current state of the node
        
  tosca.nodes.CloudProvider:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      provider:
        description: "Name of cloud provider"
        type: string
        required: true
        default: "Azure"
      datacenter:
        description: "Location of data center"
        type: string
        required: true
        default: "West Europe"
    capabilities:
      host:
        type: tosca.capabilities.Host.Compute         
    

  tosca.nodes.QC.Container.Application.Docker:
    derived_from:  tosca.nodes.QC.Application
    description: description of container
    properties:
      ports:
        description: ports to be forwarded
        type: list
        required: false     
      container_ports:
        description: ports used by the container but not exposed
        type: list
        required: false            
      entrypoint:
        description: command
        type: string
        required: false
      cmd:
        description: cmd
        type: string
        required: false
      environment:
        description: environment variables
        type: map
        required: false
      volumes:
        description: volume
        type: list
        required: false
    requirements:
      - host:
          capability: tosca.capabilities.QC.docker.Orchestrator
          node: tosca.nodes.QC.docker.Orchestrator
          relationship: tosca.relationships.HostedOn         
    attributes:
      service_url:
        type: string
        required: false
        description: url of the service 
    interfaces:
      Kubernetes:
        type: tosca.interfaces.QC.Kubernetes
        delete:
          inputs:
            repository: https://github.com/QCDIS/playbooks.git
            resources:
              - k8s/delete_service.yml
        create:
          inputs:
            repository: https://github.com/QCDIS/playbooks.git
            resources:
              - k8s/create_service.yml
        configure:
          inputs:
            repository: https://github.com/QCDIS/playbooks.git
            resources:
              - k8s/get_services.yaml              
        scale:
          inputs:
            repository: https://github.com/QCDIS/playbooks.git
            resources:
              - k8s/scale_service.yml
            replicas: 1
        autoscale:
          inputs:
            repository: https://github.com/QCDIS/playbooks.git
            resources:
              - k8s/autoscale_service.yml
            horizontal_pod_autoscaler: horizontal_pod_autoscaler.yml
        info:
          inputs:
            repository: https://github.com/QCDIS/playbooks.git
            resources:
              - k8s/get_services.yaml              
                

  tosca.nodes.QC.docker.Orchestrator:
    derived_from: tosca.nodes.QC.Application
    description: a container orchestrator
    requirements:
      - host:
          capability: tosca.capabilities.QC.VM.topology
          node: tosca.nodes.QC.VM.topology
          relationship: tosca.relationships.HostedOn
    capabilities:
      orchestrator:
        type: tosca.capabilities.QC.docker.Orchestrator
      host:
        type: tosca.capabilities.Container.Docker
      container:
        type: tosca.capabilities.Container        
    properties:
        min_masters_num:
          type: integer
          required: true
          default: 1
          constraints:
          - greater_or_equal: 1
        min_workers_num:            
          type: integer
          required: true
          default: 1
          constraints:
          - greater_or_equal: 1

  tosca.nodes.QC.docker.Orchestrator.Kubernetes:
    derived_from: tosca.nodes.QC.docker.Orchestrator
    description: Kubernetes orchestrator
    attributes:
      tokens:
        type: list
        required: false
        entry_schema:
          type: tosca.datatypes.Credential
        description: list of tokens to access the kubernetes dashboard and other kubernetes resources 
      dashboard_url:
        type: string
        required: false
        description: the dashboard access url
    interfaces:
        Standard:
          type: tosca.interfaces.QC.Standard
          create:
            inputs:
              repository: https://github.com/QCDIS/playbooks.git
              resources:
                - ec2/ec2_mount.yaml
                - docker/install_docker.yaml
                - k8s/install_k8s_prerequisites.yaml
                - k8s/install_k8s.yaml
          configure:
            inputs:
              repository: https://github.com/QCDIS/playbooks.git
              resources:
                - k8s/set_master_k8s_cluster.yaml
                - k8s/join_k8s_cluster.yaml
                - k8s/create_k8s_dashboard.yaml
          delete:
            inputs:
              repository: https://github.com/QCDIS/playbooks.git
              resources:
                - k8s/k8s_delete.yaml
                    
        
  tosca.nodes.QC.VM.topology:
    derived_from: tosca.nodes.QC.Infrastructure
    description: topology of VMs
    requirements:
      - vm:
          capability: tosca.capabilities.QC.VM
          node: tosca.nodes.QC.Infrastructure
          relationship: tosca.relationships.DependsOn
    capabilities:
      scalable:
        type: tosca.capabilities.Scalable
      topology:
        type: tosca.capabilities.QC.VM.topology
    properties:
      name:
        type: string
        required: false
        description: the name of this topology
      subnet:
        type: string
        required: false
        description: The subnet of the VMs this topology e.g. 192.168.10.10/24
      domain:        
        type: string
        required: true
        default: "Frankfurt"
        description: the domain of this topology e.g. California, UvA (Amsterdam, The Netherlands) XO Rack, Frankfurt, etc           
      provider:
        type: string
        required: true
        default: "EC2"
        description: The name of the provider e.g. EC2, ExoGENI etc.    
      coordinates: 
        type: tosca.datatypes.QC.coordinates
        required: false
        description: The coordinates of the domain 
    attributes:
      ssh_keys:
        type: tosca.datatypes.QC.Credential
        required: false      
    artifacts:
      provisioned_files:
        type: string
        required: false
    interfaces:
        CloudsStorm:
          type: tosca.interfaces.QC.CloudsStorm
          provision:
            inputs:
              code_type: SEQ
              object_type: SubTopology
          delete:
            inputs:
              code_type: SEQ
              object_type: SubTopology
          hscale:
            inputs:
              code_type: SEQ
              object_type: SubTopology
          stop:
            inputs:
              code_type: SEQ
              object_type: SubTopology
          start:
            inputs:
              code_type: SEQ
              object_type: SubTopology
        
  tosca.nodes.QC.VM.Compute:
    derived_from: tosca.nodes.QC.Infrastructure
    description: vm
    capabilities:
      compute:
        type: tosca.capabilities.QC.VM
    properties:
      running_time:
        type: integer
        required: false
        description: "the time units needed for this resource to execute the assigned workflow tasks"    
      num_cores:
        type: integer
        required: true
        default: 1
        constraints:
          - greater_or_equal: 1
      cpu_frequency:
        type: scalar-unit.frequency
        required: false
        constraints:
          - greater_or_equal: 0.5 GHz
      disk_size:
        type: scalar-unit.size
        required: true
        default: 20000 MB
        constraints:
          - greater_or_equal: 5000 MB
      mem_size:
        type: scalar-unit.size
        required: true
        default: 1000 MB
        constraints:
          - greater_or_equal: 500 MB
      os:
        type: string
        required: true       
        default: "Ubuntu 18.04"
      user_name:
        type: string
        required: true
        default: "vm_user"
    # outputs for this node
    attributes:
      private_ip:
        type: string
        required: false
        description: The private IP of the VM e.g. 192.168.10.10    
      public_ip:
        type: string
        required: false
        description: The public IP
      role:
        type: string
        required: true       
        description: the role of the VM in the topology
        default: "master"
        constraints:
          - valid_values: [ "master","worker" ]
      node_type:
        type: string
        required: false
        description: the type of VM depending on the provider. e.g. XOSmall, t.medium etc. It has to match the mem_size, num_cores etc.                  
      host_name:
        type: string
        required: false
        default: "vm"
      root_key_pair:
        type: tosca.datatypes.QC.Credential
        required: false    
      user_key_pair:
        type: tosca.datatypes.QC.Credential
        required: false           
    interfaces:
      Standard:
        create: dumy.yaml        
        
  tosca.nodes.QC.Infrastructure:
    derived_from:  tosca.nodes.QC.Root
    description: Base infrastructure node
    capabilities:
      compute:
        type: tosca.capabilities.Compute
      node:
        type: tosca.capabilities.Node
        
  tosca.nodes.QC.Application:
    derived_from:  tosca.nodes.QC.Root
    description: Base application node    
    


  tosca.nodes.QC.Application.GlusterFS:
    derived_from:  tosca.nodes.QC.Application
    description: description of container
    capabilities:
      storage:
        type: tosca.capabilities.QC.GlusterFS
    requirements:
      - host:
          capability: tosca.capabilities.QC.VM.topology
          node: tosca.nodes.QC.VM.topology
          relationship: tosca.relationships.HostedOn
    attributes:
      service_url:
        type: string
        required: false
        description: url of the service 
    interfaces:
      Standard:
        type: tosca.interfaces.QC.Standard
        create:
          inputs:
            repository: https://github.com/bityoga/mysome_glusterfs.git
            resources:
              - 000.purge.yml 
              - 001.requirements.yml
              - 002.setup_glusterfs_infra.yml    
              - 003.setup_glusterfs_cluster.yml
    properties:
        min_masters_num:
          type: integer
          required: true
          default: 1
          constraints:
          - greater_or_equal: 1
        min_workers_num:
          type: integer
          required: true
          default: 1
          constraints:
          - greater_or_equal: 1
          
          
          
  tosca.nodes.QC.Application.TIC:
    derived_from:  tosca.nodes.QC.Application
    description: description of TIC
    requirements:
      - storage:
          capability: tosca.capabilities.QC.GlusterFS
          node: tosca.nodes.QC.Application.GlusterFS
          relationship: tosca.relationships.DependsOn
    attributes:
      service_url:
        type: string
        required: false
        description: url of the service 
    interfaces:
      Standard:
        type: tosca.interfaces.QC.Standard
        create:
          inputs:
            repository: https://github.com/bityoga/fabric_as_code.git
            resources: 
              - 011.initialize_hosts.yml
    properties:
        gluster_cluster_volume:
          type: string
          required: true
          default: gv0         
          
          
          
  tosca.nodes.QC.cwl.task:
    derived_from:  tosca.nodes.QC.Application
    description: description of common workflow language task
    requirements:
      - executor:
          capability: tosca.capabilities.QC.CWLExecutor
          node: tosca.nodes.QC.Application.CWLRunner
          relationship: tosca.relationships.DependsOn    
          
          
  tosca.nodes.QC.Application.CWLRunner:
    derived_from:  tosca.nodes.QC.Application
    description: the cwl-runner https://github.com/common-workflow-language/cwltool
    requirements:
      - host:
          capability: tosca.capabilities.QC.VM.topology
          node: tosca.nodes.QC.VM.topology
          relationship: tosca.relationships.HostedOn             
