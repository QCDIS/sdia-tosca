                  hub:
                    initContainers:
                      - name: git-clone-templates
                        image: alpine/git
                        args:
                          - clone
                          - --single-branch
                          - --branch={{vl['git_login_template']}}
                          - --depth=1
                          - --
                          - {{vl['git_login_repository']}}
                          - /etc/jupyterhub/custom
                        securityContext:
                          runAsUser: 0
                        volumeMounts:
                          - name: hub-templates
                            mountPath: /etc/jupyterhub/custom
                      - name: replace-login-path
                        image: busybox:1.28
                        command: ["sh", "-c", "sed -i 's#/VRE_PATH/hub/oauth_login?next=#{{ vl['base_url'] }}/hub/oauth_login?next=#' /etc/jupyterhub/custom/templates/login.html"]
                        securityContext:
                          runAsUser: 0
                        volumeMounts:
                          - name: hub-templates
                            mountPath: /etc/jupyterhub/custom
                    extraVolumes:
                      - name: hub-templates
                        emptyDir: { }
                    extraVolumeMounts:
                      - name: hub-templates
                        mountPath: /etc/jupyterhub/custom
                    extraConfig:
                      templates: |
                        c.JupyterHub.template_paths = ['/etc/jupyterhub/custom/templates']
                    concurrentSpawnLimit: 20
                    consecutiveFailureLimit: 20
                    activeServerLimit: 20
                    namedServerLimitPerUser: 1
                    shutdownOnLogout: true
                    extraEnv:
                      OAUTH2_TLS_VERIFY: 'false'
                    baseUrl: {{ vl['base_url'] }}
                    config:
                      GenericOAuthenticator:
                        client_id: {{ auth['client_id'] }}
                        client_secret: {{ auth['client_secret'] }}
                        oauth_callback_url: https://{{ vl['fqdn'] }}:{{vl['ingress_ssl_port']}}{{ vl['base_url'] }}/hub/oauth_callback
                        authorize_url: https://{{ auth['keycloak_host'] }}:{{auth['keycloak_port']}}/auth/realms/{{ auth['realm_name'] }}/protocol/openid-connect/auth
                        token_url: https://{{ auth['keycloak_host'] }}:{{ auth['keycloak_port'] }}/auth/realms/{{ auth['realm_name'] }}/protocol/openid-connect/token
                        userdata_url: https://{{ auth['keycloak_host'] }}:{{ auth['keycloak_port'] }}/auth/realms/{{ auth['realm_name'] }}/protocol/openid-connect/userinfo
                        login_service: keycloak
                        username_key: preferred_username
                        userdata_params:
                          state: state
                      JupyterHub:
                        authenticator_class: generic-oauth
                        tls_verify: false
                  ingress:
                    enabled: true
                    hosts:
                      - {{ vl['fqdn'] }}
                    annotations:
                      kubernetes.io/ingress.class: "nginx"
                      nginx.ingress.kubernetes.io/add-base-url: "true"
                      kubernetes.io/tls-acme: "true"
                      nginx.ingress.kubernetes.io/proxy-body-size: "600m"
                      nginx.org/client-max-body-size: "600m"
                    tls:
                      - hosts:
                        - {{ vl['fqdn'] }}
                        secretName: {{ vl['fqdn'] }}-tls
                  proxy:
                    service:
                      type: ClusterIP
                  singleuser:
                    cmd: ['/usr/local/bin/start-jupyter-venv.sh']
                    extraFiles:
                      jupyter_notebook_config.json:
                        mountPath: /etc/jupyter/jupyter_notebook_config.json
                        data:
                          ServerApp:
                            iopub_data_rate_limit: 1.0e10
                            iopub_msg_rate_limitFloat: 3000
                    memory:
                        limit: 2G
                        guarantee: 2G
                    storage:
                        capacity: 0.1Gi
                    {% if shared_volume is defined and shared_volume['name'] %}
                        extraVolumes:
                          - name: {{shared_volume['name']}}
                            persistentVolumeClaim:
                              claimName: {{shared_volume['name']}}
                        extraVolumeMounts:
                          - name: {{shared_volume['name']}}
                            mountPath: /home/{{shared_volume['name']}}
                    {% endif %}
                    lifecycleHooks:
                      postStart:
                        exec:
                          command: ["sh", "-c", "/tmp/init_script.sh"]
                    defaultUrl: "/lab"
                    extraEnv:
                      JUPYTERHUB_SINGLEUSER_APP: "jupyter_server.serverapp.ServerApp"
                      MODULE_MAPPING_URL: {{vl['module_mapping_url']}}
                      NAAVRE_API_TOKEN: {{naavre_api_token['access_token']}}
                      VLAB_SLUG: {{vl['name']}}
                      API_ENDPOINT: {{vre['api_endpoint']}}
                      SEARCH_API_ENDPOINT: {{search['url']}}
                      SEARCH_API_TOKEN: {{search['access_token']}}
                      {% if custom is defined and custom['multiply_conf_url'] %}
                      MULTIPLY_CONF_URL: {{custom['multiply_conf_url']}}
                      PROJ_LIB: /venv/share/proj
                      {% endif %}
                      CELL_GITHUB: {{github['url']}}
                      CELL_GITHUB_TOKEN: {{github['token']}}
                      REGISTRY_URL: {{registry['url']}}

                    image:
                      name: {{vl['image_name']}}
                      tag: {{vl['image_tag']}}
                      pullPolicy: Always
