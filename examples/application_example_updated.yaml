tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - nodes: file:///home/alogo/workspace/sdia-tosca/types/nodes.yaml
  - data: file:///home/alogo/workspace/sdia-tosca/types/data.yml
  - capabilities: file:///home/alogo/workspace/sdia-tosca/types/capabilities.yaml
  - policies: file:///home/alogo/workspace/sdia-tosca/types/policies.yaml
  - interfaces: file:///home/alogo/workspace/sdia-tosca/types/interfaces.yml
  
repositories:
  docker_hub: https://hub.docker.com/  

description: >
  TOSCA example
  

topology_template:

  node_templates:        
    mongo:
        type: tosca.nodes.QC.Container.Application.Docker
        properties:
            ports: 
            - "30001:27017"   
            volumes:
                - db-data:/data/db
            environment:
                ROOT_PASSWORD: root_passwd
                DATABASE: db
                USER: user
                PASSWORD: passwd
        artifacts:
            image:
                type: tosca.artifacts.Deployment.Image.Container.Docker
                file:  mongo:3
                repository: docker_hub 
        interfaces:
            Kubernetes:
                delete:
                    inputs:
                        repository: https://github.com/QCDIS/playbooks.git
                        resources:
                            - k8s/delete_service.yml
                create:
                    inputs:
                        repository: https://github.com/QCDIS/playbooks.git
                        resources:
                            - k8s/create_service.yml
                scale:
                    inputs:
                        repository: https://github.com/QCDIS/playbooks.git
                        resources:
                            - k8s/scale_service.yml  
                        replicas: 1
                autoscale:
                    inputs:
                        repository: https://github.com/QCDIS/playbooks.git                
                        resources:
                            - k8s/autoscale_service.yml  
                        horizontal_pod_autoscaler: horizontal_pod_autoscaler.yml  
                info:
                    inputs:
                        repository: https://github.com/QCDIS/playbooks.git   
                        resources:
                            - k8s/get_info_service.yml
                            
                
  policies:
    - scalability:
        type: tosca.policies.QC.Performance.CPU
        targets: [ mongo ]
        properties:
            constraint_name: cpu_load
            max_value: 90
    - faultTolerance:
        type: tosca.policies.QC.FaultTolerance
        targets: [ mongo ]     
        properties:
            level: 1
