tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - nodes: https://raw.githubusercontent.com/qcdis-sdia/sdia-tosca/master/types/nodes.yaml
  - data: https://raw.githubusercontent.com/qcdis-sdia/sdia-tosca/master/types/data.yml
  - capabilities: https://raw.githubusercontent.com/qcdis-sdia/sdia-tosca/master/types/capabilities.yaml
  - policies: https://raw.githubusercontent.com/qcdis-sdia/sdia-tosca/master/types/policies.yaml
  - interfaces: https://raw.githubusercontent.com/qcdis-sdia/sdia-tosca/master/types/interfaces.yml
  
repositories:
  docker_hub: https://hub.docker.com/  

description: >
  TOSCA example
  

topology_template:

  node_templates:        
    ws-pema:
        type: tosca.nodes.QC.Container.Application.Docker
        properties:
            ports: 
            - "30001:8080"   
        artifacts:
            image:
                type: tosca.artifacts.Deployment.Image.Container.Docker
                file:  alogo53/ws-pema-lifewatch
                repository: docker_hub
                
      
#     topology:
#         type: tosca.nodes.QC.VM.topology
#         interfaces:
#             CloudsStorm:
#                 provision:
#                     inputs:
#                         code_type: SEQ
#                         object_type: SubTopology
#         properties:
#             domain: UvA (Amsterdam, The Netherlands) XO Rack
#             provider: ExoGENI


  policies:
    - scalability:
        type: tosca.policies.QC.Performance.CPU
        targets: [ ws-pema ]
        properties:
          constraint_name: "cpu load"
          max_value: 80
      
