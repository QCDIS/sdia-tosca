imports:
- capabilities: https://raw.githubusercontent.com/qcdis-sdia/sdia-tosca/master/types/capabilities.yaml
  data: https://raw.githubusercontent.com/qcdis-sdia/sdia-tosca/master/types/data.yml
  interfaces: https://raw.githubusercontent.com/qcdis-sdia/sdia-tosca/master/types/interfaces.yml
  nodes: https://raw.githubusercontent.com/qcdis-sdia/sdia-tosca/master/types/nodes.yaml
  policies: https://raw.githubusercontent.com/qcdis-sdia/sdia-tosca/master/types/policies.yaml
repositories:
  docker_hub: https://hub.docker.com/
topology_template:
  node_templates:
    argowf:
      interfaces:
        Helm:
          install_chart:
            implementation: install_chart.yaml
            inputs:
              extra_variables:
                chart_name: argo/argo-workflows
                helm_name: argowf
                name: null
                namespace: default
                repo_name: argo
                repo_url: https://argoproj.github.io/argo-helm
                values:
                  server:
                    serviceType: NodePort
              inventory:
                all:
                  hosts:
                    master:
                      ansible_host:
                        get_attribute:
                        - compute_0_topology_1
                        - public_ip
                      ansible_python_interpreter: /usr/bin/python3
                      ansible_ssh_user:
                        get_property:
                        - compute_0_topology_1
                        - user_name
              repository: https://github.com/QCDIS/helm_playbooks.git
          install_requirements:
            implementation: install_requirements.yaml
            inputs:
              inventory:
                all:
                  hosts:
                    master:
                      ansible_host:
                        get_attribute:
                        - compute_0_topology_1
                        - public_ip
                      ansible_python_interpreter: /usr/bin/python3
                      ansible_ssh_user:
                        get_property:
                        - compute_0_topology_1
                        - user_name
              repository: https://github.com/QCDIS/helm_playbooks.git
      properties:
        credential:
          get_attribute:
          - compute_0_topology_1
          - user_key_pair
      requirements:
      - kubernetes:
          capability: tosca.capabilities.QC.Kubernetes
          node: kubernetes
          relationship: tosca.relationships.HostedOn
      type: tosca.nodes.QC.Container.Application.Helm
    compute_0_topology_1:
      interfaces:
        Standard:
          create: dumy.yaml
      properties:
        disk_size: 20000 MB
        mem_size: 4048 MB
        num_cores: '2'
        os_distro: Ubuntu
        os_version: '18.04'
        user_name: vm_user
      requirements: null
      type: tosca.nodes.QC.VM.Compute
    compute_1_topology_1:
      interfaces:
        Standard:
          create: dumy.yaml
      properties:
        disk_size: 20000 MB
        mem_size: 4048 MB
        num_cores: '2'
        os_distro: Ubuntu
        os_version: '18.04'
        user_name: vm_user
      requirements: null
      type: tosca.nodes.QC.VM.Compute
    kubernetes:
      interfaces:
        Kubernetes:
          create_k8s_dashboard:
            implementation: create_k8s_dashboard.yaml
            inputs:
              inventory:
                all:
                  children:
                    cluster:
                      children:
                        master:
                          hosts:
                            m_0:
                              ansible_host:
                                get_attribute:
                                - compute_0_topology_1
                                - public_ip
                              ansible_python_interpreter: /usr/bin/python3
                              ansible_ssh_user:
                                get_property:
                                - compute_0_topology_1
                                - user_name
              repository: https://github.com/QCDIS/k8s_playbooks.git
          create_k8s_metrics_server:
            implementation: create_k8s_metrics_server.yaml
            inputs:
              inventory:
                all:
                  children:
                    cluster:
                      children:
                        master:
                          hosts:
                            m_0:
                              ansible_host:
                                get_attribute:
                                - compute_0_topology_1
                                - public_ip
                              ansible_python_interpreter: /usr/bin/python3
                              ansible_ssh_user:
                                get_property:
                                - compute_0_topology_1
                                - user_name
              repository: https://github.com/QCDIS/k8s_playbooks.git
          install_k8s:
            implementation: install_k8s.yaml
            inputs:
              inventory:
                all:
                  children:
                    cluster:
                      children:
                        master:
                          hosts:
                            m_0:
                              ansible_host:
                                get_attribute:
                                - compute_0_topology_1
                                - public_ip
                              ansible_python_interpreter: /usr/bin/python3
                              ansible_ssh_user:
                                get_property:
                                - compute_0_topology_1
                                - user_name
                        worker:
                          hosts:
                            w_1:
                              ansible_host:
                                get_attribute:
                                - compute_1_topology_1
                                - public_ip
                              ansible_python_interpreter: /usr/bin/python3
                              ansible_ssh_user:
                                get_property:
                                - compute_1_topology_1
                                - user_name
              repository: https://github.com/QCDIS/k8s_playbooks.git
          install_requirements:
            implementation: install_prerequisites.yaml
            inputs:
              inventory:
                all:
                  children:
                    cluster:
                      children:
                        master:
                          hosts:
                            m_0:
                              ansible_host:
                                get_attribute:
                                - compute_0_topology_1
                                - public_ip
                              ansible_python_interpreter: /usr/bin/python3
                              ansible_ssh_user:
                                get_property:
                                - compute_0_topology_1
                                - user_name
                        worker:
                          hosts:
                            w_1:
                              ansible_host:
                                get_attribute:
                                - compute_1_topology_1
                                - public_ip
                              ansible_python_interpreter: /usr/bin/python3
                              ansible_ssh_user:
                                get_property:
                                - compute_1_topology_1
                                - user_name
              repository: https://github.com/QCDIS/k8s_playbooks.git
          join_k8s_cluster:
            implementation: join_k8s_cluster.yaml
            inputs:
              inventory:
                all:
                  children:
                    cluster:
                      children:
                        master:
                          hosts:
                            m_0:
                              ansible_host:
                                get_attribute:
                                - compute_0_topology_1
                                - public_ip
                              ansible_python_interpreter: /usr/bin/python3
                              ansible_ssh_user:
                                get_property:
                                - compute_0_topology_1
                                - user_name
                        worker:
                          hosts:
                            w_1:
                              ansible_host:
                                get_attribute:
                                - compute_1_topology_1
                                - public_ip
                              ansible_python_interpreter: /usr/bin/python3
                              ansible_ssh_user:
                                get_property:
                                - compute_1_topology_1
                                - user_name
              repository: https://github.com/QCDIS/k8s_playbooks.git
          set_attributes:
            implementation: get_attributes.yaml
            inputs:
              inventory:
                all:
                  children:
                    cluster:
                      children:
                        master:
                          hosts:
                            m_0:
                              ansible_host:
                                get_attribute:
                                - compute_0_topology_1
                                - public_ip
                              ansible_python_interpreter: /usr/bin/python3
                              ansible_ssh_user:
                                get_property:
                                - compute_0_topology_1
                                - user_name
              repository: https://github.com/QCDIS/k8s_playbooks.git
          set_master:
            implementation: set_master_k8s_cluster.yaml
            inputs:
              inventory:
                all:
                  children:
                    cluster:
                      children:
                        master:
                          hosts:
                            m_0:
                              ansible_host:
                                get_attribute:
                                - compute_0_topology_1
                                - public_ip
                              ansible_python_interpreter: /usr/bin/python3
                              ansible_ssh_user:
                                get_property:
                                - compute_0_topology_1
                                - user_name
              repository: https://github.com/QCDIS/k8s_playbooks.git
      properties:
        credential:
          get_attribute:
          - compute_0_topology_1
          - user_key_pair
      requirements:
      - host:
          capability: tosca.capabilities.QC.VM.topology
          node: topology_1
          relationship: tosca.relationships.HostedOn
      type: tosca.nodes.QC.docker.Orchestrator.Kubernetes
    monitoring:
      interfaces:
        Helm:
          install_chart:
            implementation: install_chart.yaml
            inputs:
              extra_variables:
                chart_name: argo/argo-workflows
                helm_name: argowf
                name: null
                namespace: default
                repo_name: argo
                repo_url: https://argoproj.github.io/argo-helm
                values:
                  server:
                    serviceType: NodePort
              inventory:
                all:
                  hosts:
                    master:
                      ansible_host:
                        get_attribute:
                        - compute_0_topology_1
                        - public_ip
                      ansible_python_interpreter: /usr/bin/python3
                      ansible_ssh_user:
                        get_property:
                        - compute_0_topology_1
                        - user_name
              repository: https://github.com/QCDIS/helm_playbooks.git
          install_requirements:
            implementation: install_requirements.yaml
            inputs:
              inventory:
                all:
                  hosts:
                    master:
                      ansible_host:
                        get_attribute:
                        - compute_0_topology_1
                        - public_ip
                      ansible_python_interpreter: /usr/bin/python3
                      ansible_ssh_user:
                        get_property:
                        - compute_0_topology_1
                        - user_name
              repository: https://github.com/QCDIS/helm_playbooks.git
      properties:
        credential:
          get_attribute:
          - compute_0_topology_1
          - user_key_pair
      requirements:
      - kubernetes:
          capability: tosca.capabilities.QC.Kubernetes
          node: kubernetes
          relationship: tosca.relationships.HostedOn
      type: tosca.nodes.QC.Container.Application.Helm
    topology_1:
      interfaces:
        Azure:
          create:
            implementation: vm/create_vms.yaml
            inputs:
              extra_variables:
                region:
                  get_property:
                  - topology_1
                  - domain
              inventory:
                all:
                  hosts:
                    localhost:
                      ansible_connection: local
                      instances:
                        compute_0_topology_1:
                          disk_size:
                            get_property:
                            - compute_0_topology_1
                            - disk_size
                          mem_size:
                            get_property:
                            - compute_0_topology_1
                            - mem_size
                          num_cores:
                            get_property:
                            - compute_0_topology_1
                            - num_cores
                          os_distro:
                            get_property:
                            - compute_0_topology_1
                            - os_distro
                          os_version:
                            get_property:
                            - compute_0_topology_1
                            - os_version
                          user_name:
                            get_property:
                            - compute_0_topology_1
                            - user_name
                        compute_1_topology_1:
                          disk_size:
                            get_property:
                            - compute_1_topology_1
                            - disk_size
                          mem_size:
                            get_property:
                            - compute_1_topology_1
                            - mem_size
                          num_cores:
                            get_property:
                            - compute_1_topology_1
                            - num_cores
                          os_distro:
                            get_property:
                            - compute_1_topology_1
                            - os_distro
                          os_version:
                            get_property:
                            - compute_1_topology_1
                            - os_version
                          user_name:
                            get_property:
                            - compute_1_topology_1
                            - user_name
              repository: https://github.com/QCDIS/azure_playbooks.git
          create_resoucre_group:
            implementation: resource_group/create_resource_groups.yaml
            inputs:
              extra_variables:
                region:
                  get_property:
                  - topology_1
                  - domain
                topology_name: topology_1
              inventory:
                all:
                  hosts:
                    localhost:
                      ansible_connection: local
                      instances:
                        compute_0_topology_1:
                          disk_size:
                            get_property:
                            - compute_0_topology_1
                            - disk_size
                          mem_size:
                            get_property:
                            - compute_0_topology_1
                            - mem_size
                          num_cores:
                            get_property:
                            - compute_0_topology_1
                            - num_cores
                          os_distro:
                            get_property:
                            - compute_0_topology_1
                            - os_distro
                          os_version:
                            get_property:
                            - compute_0_topology_1
                            - os_version
                          user_name:
                            get_property:
                            - compute_0_topology_1
                            - user_name
                        compute_1_topology_1:
                          disk_size:
                            get_property:
                            - compute_1_topology_1
                            - disk_size
                          mem_size:
                            get_property:
                            - compute_1_topology_1
                            - mem_size
                          num_cores:
                            get_property:
                            - compute_1_topology_1
                            - num_cores
                          os_distro:
                            get_property:
                            - compute_1_topology_1
                            - os_distro
                          os_version:
                            get_property:
                            - compute_1_topology_1
                            - os_version
                          user_name:
                            get_property:
                            - compute_1_topology_1
                            - user_name
              repository: https://github.com/QCDIS/azure_playbooks.git
          create_ssh_key:
            implementation: key/create_keys.yaml
            inputs:
              inventory:
                all:
                  hosts:
                    localhost:
                      ansible_connection: local
                      instances:
                        compute_0_topology_1:
                          disk_size:
                            get_property:
                            - compute_0_topology_1
                            - disk_size
                          mem_size:
                            get_property:
                            - compute_0_topology_1
                            - mem_size
                          num_cores:
                            get_property:
                            - compute_0_topology_1
                            - num_cores
                          os_distro:
                            get_property:
                            - compute_0_topology_1
                            - os_distro
                          os_version:
                            get_property:
                            - compute_0_topology_1
                            - os_version
                          user_name:
                            get_property:
                            - compute_0_topology_1
                            - user_name
                        compute_1_topology_1:
                          disk_size:
                            get_property:
                            - compute_1_topology_1
                            - disk_size
                          mem_size:
                            get_property:
                            - compute_1_topology_1
                            - mem_size
                          num_cores:
                            get_property:
                            - compute_1_topology_1
                            - num_cores
                          os_distro:
                            get_property:
                            - compute_1_topology_1
                            - os_distro
                          os_version:
                            get_property:
                            - compute_1_topology_1
                            - os_version
                          user_name:
                            get_property:
                            - compute_1_topology_1
                            - user_name
              repository: https://github.com/QCDIS/azure_playbooks.git
          delete:
            implementation: resource_group/delete_resource_group.yaml
            inputs:
              extra_variables:
                resource_group_name:
                  get_attribute:
                  - topology_1
                  - resource_group
                topology_name: topology_1
              inventory:
                all:
                  hosts:
                    localhost:
                      ansible_connection: local
              repository: https://github.com/QCDIS/azure_playbooks.git
          delete_ssh_key:
            implementation: key/delete_keys.yaml
            inputs:
              inventory:
                all:
                  hosts:
                    localhost:
                      ansible_connection: local
              repository: https://github.com/QCDIS/azure_playbooks.git
          install_requirements:
            implementation: install_requirements.yaml
            inputs:
              inventory:
                all:
                  hosts:
                    localhost:
                      ansible_connection: local
              repository: https://github.com/QCDIS/azure_playbooks.git
          select_image:
            implementation: info/get_images.yaml
            inputs:
              extra_variables:
                region:
                  get_property:
                  - topology_1
                  - domain
              inventory:
                all:
                  hosts:
                    localhost:
                      ansible_connection: local
                      instances:
                        compute_0_topology_1:
                          disk_size:
                            get_property:
                            - compute_0_topology_1
                            - disk_size
                          mem_size:
                            get_property:
                            - compute_0_topology_1
                            - mem_size
                          num_cores:
                            get_property:
                            - compute_0_topology_1
                            - num_cores
                          os_distro:
                            get_property:
                            - compute_0_topology_1
                            - os_distro
                          os_version:
                            get_property:
                            - compute_0_topology_1
                            - os_version
                          user_name:
                            get_property:
                            - compute_0_topology_1
                            - user_name
                        compute_1_topology_1:
                          disk_size:
                            get_property:
                            - compute_1_topology_1
                            - disk_size
                          mem_size:
                            get_property:
                            - compute_1_topology_1
                            - mem_size
                          num_cores:
                            get_property:
                            - compute_1_topology_1
                            - num_cores
                          os_distro:
                            get_property:
                            - compute_1_topology_1
                            - os_distro
                          os_version:
                            get_property:
                            - compute_1_topology_1
                            - os_version
                          user_name:
                            get_property:
                            - compute_1_topology_1
                            - user_name
              repository: https://github.com/QCDIS/azure_playbooks.git
          select_instance_type:
            implementation: info/get_inst_flavors.yaml
            inputs:
              extra_variables:
                region:
                  get_property:
                  - topology_1
                  - domain
              inventory:
                all:
                  hosts:
                    localhost:
                      ansible_connection: local
                      credentials:
                        get_attribute:
                        - topology_1
                        - credentials
                      instances:
                        compute_0_topology_1:
                          disk_size:
                            get_property:
                            - compute_0_topology_1
                            - disk_size
                          mem_size:
                            get_property:
                            - compute_0_topology_1
                            - mem_size
                          num_cores:
                            get_property:
                            - compute_0_topology_1
                            - num_cores
                          os_distro:
                            get_property:
                            - compute_0_topology_1
                            - os_distro
                          os_version:
                            get_property:
                            - compute_0_topology_1
                            - os_version
                          user_name:
                            get_property:
                            - compute_0_topology_1
                            - user_name
                        compute_1_topology_1:
                          disk_size:
                            get_property:
                            - compute_1_topology_1
                            - disk_size
                          mem_size:
                            get_property:
                            - compute_1_topology_1
                            - mem_size
                          num_cores:
                            get_property:
                            - compute_1_topology_1
                            - num_cores
                          os_distro:
                            get_property:
                            - compute_1_topology_1
                            - os_distro
                          os_version:
                            get_property:
                            - compute_1_topology_1
                            - os_version
                          user_name:
                            get_property:
                            - compute_1_topology_1
                            - user_name
              repository: https://github.com/QCDIS/azure_playbooks.git
          select_network:
            implementation: network/create_network_interfaces.yaml
            inputs:
              extra_variables:
                region:
                  get_property:
                  - topology_1
                  - domain
              inventory:
                all:
                  hosts:
                    localhost:
                      ansible_connection: local
                      instances:
                        compute_0_topology_1:
                          disk_size:
                            get_property:
                            - compute_0_topology_1
                            - disk_size
                          mem_size:
                            get_property:
                            - compute_0_topology_1
                            - mem_size
                          num_cores:
                            get_property:
                            - compute_0_topology_1
                            - num_cores
                          os_distro:
                            get_property:
                            - compute_0_topology_1
                            - os_distro
                          os_version:
                            get_property:
                            - compute_0_topology_1
                            - os_version
                          user_name:
                            get_property:
                            - compute_0_topology_1
                            - user_name
                        compute_1_topology_1:
                          disk_size:
                            get_property:
                            - compute_1_topology_1
                            - disk_size
                          mem_size:
                            get_property:
                            - compute_1_topology_1
                            - mem_size
                          num_cores:
                            get_property:
                            - compute_1_topology_1
                            - num_cores
                          os_distro:
                            get_property:
                            - compute_1_topology_1
                            - os_distro
                          os_version:
                            get_property:
                            - compute_1_topology_1
                            - os_version
                          user_name:
                            get_property:
                            - compute_1_topology_1
                            - user_name
              repository: https://github.com/QCDIS/azure_playbooks.git
          set_attributes:
            implementation: set_attributes.yaml
            inputs:
              inventory:
                all:
                  hosts:
                    localhost:
                      ansible_connection: local
              repository: https://github.com/QCDIS/azure_playbooks.git
      properties:
        domain: westeurope
        provider: Azure
      requirements:
      - vm:
          capability: tosca.capabilities.QC.VM
          node: compute_0_topology_1
          relationship: tosca.relationships.DependsOn
      - vm:
          capability: tosca.capabilities.QC.VM
          node: compute_1_topology_1
          relationship: tosca.relationships.DependsOn
      type: tosca.nodes.QC.VM.topology
  workflows:
    template_wf_delete_topology_topology_1:
      description: delete_topology
      preconditions:
      - condition:
        - assert:
          - desired_state:
            - equal: DELETED
          - current_state:
            - equal: RUNNING
        target: topology_1
      steps:
        template_wf_delete:
          activities:
          - set_state: DELETING
          - call_operation: Azure.delete
            on_success:
            - template_wf_set_attributes
          - set_state: DELETED
          target: topology_1
        template_wf_set_attributes:
          activities:
          - call_operation: Azure.set_attributes
          target: topology_1
    template_wf_deploy_k8s:
      description: deploy k8s
      preconditions:
      - condition:
        - assert:
          - desired_state:
            - equal: RUNNING
          - current_state:
            - equal: UNDEFINED
        target: kubernetes
      - condition:
        - assert:
          - current_state:
            - equal: RUNNING
        target: topology_1
      steps:
        template_wf_create_k8s_dashboard:
          activities:
          - call_operation: Kubernetes.create_k8s_dashboard
            on_success:
            - template_wf_install_monitoring
          - set_state: RUNNING
          target: kubernetes
        template_wf_install_argowf:
          activities:
          - call_operation: Helm.install_chart
            on_success: template_wf_set_k8s_attributes
          - set_state: RUNNING
          target: argowf
        template_wf_install_heml_requirements:
          activities:
          - call_operation: Helm.install_requirements
            on_success:
            - template_wf_install_monitoring
            - template_wf_install_argowf
          target: monitoring
        template_wf_install_k8s:
          activities:
          - call_operation: Kubernetes.install_k8s
            on_success: template_wf_set_master
          target: kubernetes
        template_wf_install_k8s_requirements:
          activities:
          - set_state: CREATING
          - call_operation: Kubernetes.install_requirements
            on_success: template_wf_install_k8s
          target: kubernetes
        template_wf_install_monitoring:
          activities:
          - call_operation: Helm.install_chart
            on_success: template_wf_set_k8s_attributes
          - set_state: RUNNING
          target: monitoring
        template_wf_join_k8s_cluster:
          activities:
          - call_operation: Kubernetes.join_k8s_cluster
            on_success:
            - template_wf_install_monitoring
            - template_wf_install_argowf
          target: kubernetes
        template_wf_set_k8s_attributes:
          activities:
          - call_operation: Kubernetes.set_attributes
          target: kubernetes
        template_wf_set_master:
          activities:
          - call_operation: Kubernetes.set_master
            on_success:
            - template_wf_join_k8s_cluster
            - template_wf_install_heml_requirements
            - template_wf_create_k8s_dashboard
          target: kubernetes
    template_wf_provision_topology_1:
      description: Workflow to deploy azure topology
      preconditions:
      - condition:
        - assert:
          - desired_state:
            - equal: RUNNING
          - current_state:
            - equal: UNDEFINED
        target: topology_1
      steps:
        template_wf_create:
          activities:
          - call_operation: Azure.create
            on_success:
            - template_wf_set_attributes
          - set_state: RUNNING
          target: topology_1
        template_wf_create_resoucre_group:
          activities:
          - call_operation: Azure.create_resoucre_group
            on_success:
            - template_wf_select_instance_type
            - template_wf_select_network
            - template_wf_create_ssh_key
            - template_wf_select_image
          target: topology_1
        template_wf_create_ssh_key:
          activities:
          - call_operation: Azure.create_ssh_key
            on_success:
            - template_wf_create
          target: topology_1
        template_wf_install_requirements:
          activities:
          - set_state: CREATING
          - call_operation: Azure.install_requirements
            on_success:
            - template_wf_create_resoucre_group
          target: topology_1
        template_wf_select_image:
          activities:
          - call_operation: Azure.select_image
            on_success:
            - template_wf_create
          target: topology_1
        template_wf_select_instance_type:
          activities:
          - call_operation: Azure.select_instance_type
            on_success:
            - template_wf_create
          target: topology_1
        template_wf_select_network:
          activities:
          - call_operation: Azure.select_network
            on_success:
            - template_wf_create
          target: topology_1
        template_wf_set_attributes:
          activities:
          - call_operation: Azure.set_attributes
          target: topology_1
tosca_definitions_version: tosca_simple_yaml_1_2
